[project]
name = "ch-backup"
description = "Backup tool for ClickHouse DBMS."
license = "MIT"
readme = "README.md"
homepage = "https://github.com/yandex/ch-backup"
repository = "https://github.com/yandex/ch-backup"
dynamic = ["version"]
requires-python = ">=3.9"
keywords=[
    "clickhouse",
    "database",
    "administration",
]
classifiers = [
    "Development Status :: 5 - Production/Stable",
    "Intended Audience :: Developers",
    "Intended Audience :: System Administrators",
    "License :: OSI Approved :: MIT License",
    "Operating System :: MacOS",
    "Operating System :: POSIX :: BSD",
    "Operating System :: POSIX :: Linux",
    "Operating System :: Unix",
    "Environment :: Console",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "Programming Language :: Python :: 3.13",
    "Topic :: Database",
    "Typing :: Typed",
]
dependencies = [
    "boto3 < 1.19 ; python_version < '3.12'",
    "boto3 < 1.21 ; python_version >= '3.12'",
    "botocore < 1.22 ; python_version < '3.12'",
    "botocore < 1.24 ; python_version >= '3.12'",
    "click >= 8.1.8, < 8.2",
    "cloup >= 3.0.7",
    "humanfriendly >= 10.0",
    "kazoo >= 2.10",
    "legacy-cgi >= 2.6 ; python_version >= '3.13'",  # for compatibility with "boto"
    "loguru >= 0.7.3",
    "packaging",
    "psutil >= 7.0",
    "pynacl == 1.2.1",
    "pypeln == 0.4.9",
    "pyyaml >= 5.0, < 5.4",
    "requests >= 2.20, < 2.29 ; python_version < '3.13'",  # upper bound is for compatibility with "docker < 8.0"
    "requests >= 2.20 ; python_version >= '3.13'",
    "setuptools >=71.1 ; python_version >= '3.12'",  # for compatibility with "pypeln" and its dependency "stopit"
    "tabulate >= 0.9",
    "tenacity >= 8.3",
    "xmltodict >= 0.14.2",
]

[dependency-groups]
dev = [
    "behave >= 1.2.6",
    "black >= 25.1",
    "codespell >= 2.4.1",
    "deepdiff >= 7.0, < 7.1",
    "docker >= 4.0, < 8.0 ; python_version < '3.13'",  # upper bound is for compatibility with "docker-compose"
    "docker >= 4.0 ; python_version >= '3.13'",
    "docker-compose ~= 1.28.0 ; python_version<'3.13'",
    "hypothesis >= 6.131.9",
    "isort >= 6.0",
    "jinja2 >= 3.1.6",
    "mypy ~= 1.9.0",
    "mypy-boto3-s3 >= 1.38",
    "pyhamcrest >= 2.1",
    "pylint >= 3.0, < 4.0",
    "pytest >= 8.3.5",
    "ruff >= 0.11.8",
    "types-pyyaml >= 6.0.12.20250402",
    "types-requests >= 2.31.0.6",
    "types-tabulate >= 0.9.0.20241207",
    "websocket-client < 2.0 ; python_version < '3.13'",  # for compatibility with "docker-compose"
]

[project.scripts]
ch-backup = "ch_backup:main"


[build-system]
requires = ["hatchling"]
build-backend = "hatchling.build"

[tool.hatch.version]
path = "ch_backup/version.txt"
pattern = "(?P<version>.+)"

[tool.hatch.build]
ignore-vcs = true  # to prevent excluding generated files
only-include = ["ch_backup"]


[tool.isort]
profile = "black"


[tool.codespell]
ignore-words-list = "sav,fpr"


[tool.ruff]
lint.select = ["E", "F", "W", "A", "S"]
lint.ignore = [
    "A003",  # "Class attribute is shadowing a Python builtin"
    "A005",  # Module `logging` shadows a Python standard-library module
    "E402",  # "Module level import not at top of file", duplicate corresponding pylint check
    "E501",  # "Line too long"
    "S101",  # Use of `assert` detected
    "S108",  # Probable insecure usage of temporary file or directory
    "S110",  # `try`-`except`-`pass` detected, consider logging the exception"
    "S113",  # Probable use of `requests` call without timeout
    "S311",  # Standard pseudo-random generators are not suitable for cryptographic purposes
    "S324",  # Probable use of insecure hash functions in `hashlib`: `md5`
    "S602",  # `subprocess` call with `shell=True
]

[tool.ruff.lint.per-file-ignores]
"__init__.py" = ["F401"]  # Unused import
"tests/**"    = ["S"]     # Disable security checks in tests

[tool.pylint.main]
py-version = "3.9"  # Minimum Python version to use for version dependent checks
jobs = 4  # Use multiple processes to speed up Pylint
ignored-modules = [  # List of module names for which member attributes should not be checked
    "behave",
    "requests.packages",
]

[tool.pylint."messages control"]
disable = [
    "broad-exception-caught",
    "duplicate-code",
    "fixme",
    "inconsistent-return-statements",
    "line-too-long",
    "raise-missing-from",
    "too-few-public-methods",
    "unnecessary-pass",
    "use-dict-literal",
]

[tool.pylint.basic]
include-naming-hint = true

[tool.pylint.design]
max-args = 10
max-locals = 18
max-branches = 14
max-attributes = 10
max-public-methods = 30

[tool.pylint.refactoring]
max-nested-blocks = 7

[tool.pylint.reports]
score = false


[tool.mypy]
python_version = 3.9
ignore_missing_imports = true
disallow_incomplete_defs = true
check_untyped_defs = true
implicit_optional = true

[[tool.mypy.overrides]]
module = "ch_backup.cli"
disable_error_code = "arg-type"  # Suppress errors related to Click library usage

[[tool.mypy.overrides]]
module = "tests.integration.steps.*"
disable_error_code = "arg-type,call-overload"  # Suppress errors related to PyHamcrest library usage
